# Terminal commands file

#*******************************************************************************
# DU
#*******************************************************************************

(*) Example: du - h
Explanation: Size of a directory

#*******************************************************************************
# SED
#*******************************************************************************

(*) Option:
	-i : Write to the same file (Linux)

(*) Example: sed s'/;$//' $FileIn > $FileOut
Explanation: Remove the last semicolon in each line ($: End of line character - ^: Begin of line character)

(*) Example: sed 's/\t/;/g' $FileIn > $FileOut
Explanation: Replace all tab character by semicolon character (/g means global - without /g, sed only replaces once each line)

(*) Example: sed 's/#//g' $FileIn > $FileOut
Explanation: Remove all '#' character

(*) Example: sed -n - e 100000p $FileName
Explanation: Print line number 100000

(*) Example: sed '1d' $FileIn > $FileOut
Explanation: Remove the first line

(*) Example: sed '1,8d' $FileIn > FileOut
Explanation: Remove lines 1 - 8

(*) Example: sed '$d' $FileIn > $FileOut
Explanation: Remove the last line

(*) Example: sed '/NNN/d' $FileName
Explanation: Remove all the lines contain NNN

(*) Example: 's/^\(.\{25\}\)XXXXXXXXXX/\1YYYYYYYYYY/' $InputFile > $OutputFile
Explanation: Replace XXXXXXXXXX at position 26-35 to YYYYYYYYYY - Without \1, the command will remove all previous characters and the line will start with YYYYYYYYYY.

(*) Example: sed 's/XXX[^"]*YYY//g' $FileIn
Explanation: Delete string with pattern XXX*YYY

(*) Example: sed '/^\s*$/d'
Explanation: Delete empty line

#*******************************************************************************
# TEE
#*******************************************************************************

(*) Example: sort $FileIn | tee -a $FileOut
Explanation: append file and print to screen

#*******************************************************************************
# FIND
#*******************************************************************************

(*) Example: find . -name $fileNamePattern
Explanation: Find file with filename in fileNamePattern

(*) Example: find . -name '*.java' | xargs grep -l $SearchKeyWord
Explanation: Recursively search for the key word in Unix system

(*) Example: find $Directory
Explanation: Find all files in the directory

(*) Example: find .
Explanation: Find all the files in current directory

#*******************************************************************************
# ENV
#*******************************************************************************

(*) Example: env
Explanation: list all the environment variables

#*******************************************************************************
# PRINT
#*******************************************************************************

Usage: print [option] [string ...]
OPTIONS
	-n	Do not append a new-line character to the output.

(*) Example: print $Message
Explanation: print the message with a new line

(*) Example: print -n $Message
Explanation: print the message without a new line

#*******************************************************************************
# SPLIT
#*******************************************************************************

(*) Example: split -l $NoOfLine $FileName
Explanation: split a file base on number of line

#*******************************************************************************
# TAIL
#*******************************************************************************

(*) Example: tail -n +2 $FileIn > $FileOut
Explanation: Remove the first line

(*) Example: tail -f $FileName
Explanation: Keep reading the file while the file is being appended (Automatically update when the file is appended).

#*******************************************************************************
# WC
#*******************************************************************************

(*) Example: wc -l $FileName | awk '{print $1}'
Explanation: Print number of lines in the File

(*) Example: wc FileName | awk '{print $2}'
Explanation: Print word counts in the File

#*******************************************************************************
# AWK
#*******************************************************************************

(*) Example: awk -F';' '{print $2";"$5}' $FileName
Explanation: Print column 2 and column 5

(*) Example: awk '$0=substr($0,1,249)"XYZ"substr($0,253,length($0))' $FileName
Explanation: Replace position 250-252 by string "XYZ"

(*) Example: awk 'substr($0,45,3) == "USD"' $FileName
Explanation: Print all the lines which have "USD" at position 45 to 47

(*) Example: awk '{if (substr($0, 26, 1) == "X" && substr($0, 181, 14) == "XXXXXXXXXXXXXX") {$0=substr($0, 1, 180)"YYYYYYYYYYYYYY"substr($0, 195, length($0))} ; print $0}' $FileIn > $FileOut
Explanation: If a line contains X at position 26-26 and XXXXXXXXXXXXXX at position 181-194 then replace XXXXXXXXXXXXXX at position 181-194 with YYYYYYYYYYYYYY

(*) Example: awk '{printf("%-100s\n", substr($0, 0, length($0) - 1) )}' $FILENAME
Explanation: Set minimum length for each line to 100, filled with space.

(*) Example: awk '{sum += $1} END {print sum}' $FILE_NAME
Explanation: Sum first column

#*******************************************************************************
# TR
#*******************************************************************************

(*) Example: tr -d '\r' $FileIn > $FileOut
Explanation: Remove all '\r' characters

#*******************************************************************************
# GREP
#*******************************************************************************

(*) Option:
    -i : Ignore case sensitive.
    -v : Find lines that do not contain key words.
    -c : Prints only a count of the lines that contain the pattern.
    -n : Display line number.
    -A {x} : Display x line(s) after each match.
    -B {x} : Display x line(s) after each match.

#*******************************************************************************
# EVAL
#*******************************************************************************

(*) Example: eval "${COMMAND1} ; ${COMMAND2} ; ${COMMAND3}"
Explanation: Run COMMAND1 --> COMMAND2 --> COMMAND3

#*******************************************************************************
# UNIQ
#*******************************************************************************

(*) Example: uniq -c $FileIn
Explanation: Count the number of unique lines

#*******************************************************************************
# SORT
#*******************************************************************************

(*) Example: sort -u $FILENAME
Explanation: Equivalent to sort $FILENAME | uniq

(*) Example: sort -k1 -n $FileIn
Explanation: Sort first column as number

#*******************************************************************************
# ZIP - 7z
#*******************************************************************************

(*) Example: zip $ZipFileName $FileNeedToBeZipped

(*) Example: 7z a -tzip $FinalFile $FileOne $FileTwo ....

#*******************************************************************************
# GZIP
#*******************************************************************************

(*) Example: gzip $FileNeedToBeZipped
Explanation: Zip file $FileNeedToBeZipped to $FileNeedToBeZipped.gz and remove $FileNeedToBeZipped

(*) Example: gzip -c $FileNeedToBeZipped > $ZipFileName
Explanation: Keep $FileNeedToBeZipped and zip to a new file $ZipFileName

#*******************************************************************************
# UNZIP
#*******************************************************************************

(*) Example: gunzip $FileNeedTobeUnzipped
Explanation: Unzip $FileNeedTobeUnzipped and remove $FileNeedTobeUnzipped

(*) Example: 7z e $FileNeedTobeUnzipped

#*******************************************************************************
# CURL
#*******************************************************************************

(*) Example: curl $Url > $FileName
Explanation: Download page $Url to your local machine

(*) Example: curl -d 'Hello World!' $Url
Explanation: Send Hello World! string to server with $Url

(*) Example: curl -d '$JsonContent' -H 'Content-Type: application/json' $Url
Explantion: Send json data to server with $Urk

(*) Example: curl -d $FileName $Url
Explanation: Send file dat to server with $Url

#*******************************************************************************
# WATCH
#*******************************************************************************

(*) Example: watch -n 5 'echo Haha'
Explanation: Run echo Haha every 5 seconds

#*******************************************************************************
# CUT
#*******************************************************************************

(*) Example: cut -c2-4,3-5 FileName
Explanation: Show text at position 2-4 and 3-5 in FileName.

(*) Example: cut -c5-
Explanation: Show text at position 5 to end of the line.

#*******************************************************************************
# MANUALLY INSTALL LIBRARY
#*******************************************************************************

Download and extract to local folder

1. wget https://lib_file_download_link.tar.gz 
2. tar -xvf lib_file_name.tar.gz 
3. cd lib_file_name

Copy to /usr/local
sudo cp -R * /usr/local/

#*******************************************************************************
# PBCOPY (MAC)
#*******************************************************************************

Copy to clipboard

(*) Example: pbcopy < $FileName
Explanation: Copy content of $FileName to clipboard

#*******************************************************************************
# PSTREE - KILL - PKILL
#*******************************************************************************

(*) Example: pstree -p $ProcessId
Explanation: Display tree process tree that contains $ProcessId

(*) Example: kill -9 $ProcessId
Explanation: Kill process $ProcessId

(*) Example: pkill -u $UserName
Explanation: Kill all processes that were owned by $UserName

#*******************************************************************************
# XARGS (xargs runs in sequential, to run in parallel, use -P option)
#*******************************************************************************

(*) Example: $FirstScript.sh | xargs -L 1 $SecondScript.sh <-> $FirstScript.sh | xargs -n1 $SecondScript.sh (Maximum 1 argument for $SecondScript)
Explanation: Using output from $FirstScript to be parameter for $SecondScript (One by One)

(*) Example: $FirstScript.sh | xargs -L 2 $SecondScript.sh <-> $FirstScript.sh | xargs -L 2 $SecondScript.sh (Maximum 1 argument for $SecondScript)
Explanation: Using output from $FirstScript to be parameter for $SecondScript (Two by Two)

(*) Example: $FirstScript.sh | xargs -L 2 -P4 $SecondScript.sh
Explanation: Run in parallel with 4 processes

#*******************************************************************************
# DIFF
#*******************************************************************************

(*) Example: diff --brief -Nr $DirectoryOne $DirectoryTwo
Explanation: Compare between two directories

(*) Example: diff -y $FileOne $FileTwo
Explanation: Diff side-by-side

#*******************************************************************************
# CAT
#*******************************************************************************

(*) Example: cat -e $FILENAME
Explanation: Display non-printing characters, and display a dollar sign (`$') at the end of each line.

#*******************************************************************************
# PASTE
#*******************************************************************************

(*) Example: paste -d ' ' $FileOne $FileTwo
Explanation: Mege two file line by line

#*******************************************************************************
# JOBS
#*******************************************************************************

(*) Example: jobs -l
Explanation: List all the runnig jobs with corresponding PID. The current job is always flagged with a '+' sign, and the previous job with a '-' sign.

#*******************************************************************************
# SCP
#*******************************************************************************

(*) Example: scp -r $HOST:$FOLDER_REMOTE_ABSOLUTE_PATH $LOCAL_PATH
Explanation: Copy whole folder from remote host

#*******************************************************************************
# RSYNC
#*******************************************************************************

(*) Example: rsync -r $FOLDER_SOURCE $FOLDER_DESTINATION
Explanation: Synchronize between two folder (Recurse into directories)

(*) Example: rsync --delete $FOLDER_SOURCE $FOLDER_DESTINATION
Explanation: Synchronize between two folder and DELETE extraneous file from $FOLDER_DESTINATION

#*******************************************************************************
# NETCAT
#*******************************************************************************

(*) Example: nc -lk 9999
Explanation: Start Netcat server, listen to TCP connection on port 9999
- Option [-l] to specify PORT.
- Option [-k] to force Netcat to listen for another connection after its current connection is completed.

(*) Example: nc localhost 9999
Explanation: Start a connection to above Netcat server.

#*******************************************************************************
# :
#*******************************************************************************

(*) Example: :
Explanation: No effect

Example: : > $FILE_NAME
Explanation: Empty file $FILE_NAME

#*******************************************************************************
# LESS
#*******************************************************************************

(*) Option:
    -N : Display line number.

#*******************************************************************************
# LSOF
#*******************************************************************************

(*) Example: lsof -i :$PORT
Explanation: List application which is using this $PORT

#*******************************************************************************
# DF
#*******************************************************************************

(*) Example: df
Explanation: Display free disk space.

#*******************************************************************************
# LESS
#*******************************************************************************

(*) Syntax: less +<line_number> <file_name>
Example: less +123456 <file_name>
Explanation: Open at specific line: 123456

(*) Example: less -N <file_name>
Explanation: Show the line number.

(*) Syntax: In less: <line_number>g
Example: In less: 123456g
Explanation: Jump to line 123456

#*******************************************************************************
#
#*******************************************************************************

